const ordersSet = new Set([
  'Pasta',
  'Pizza',
  'Pizza',
  'Risoto',
  'Pasta',
  'Pizza',
]);

console.log(ordersSet);

console.log(new Set('pasindu'));
console.log(ordersSet.size);

console.log(ordersSet.has('Pizza'));
console.log(ordersSet.has('bread'));

ordersSet.add('Garlic Bread');
ordersSet.add('Garlic Bread');

console.log(ordersSet);

ordersSet.delete('Risoto');

console.log(ordersSet);

// ordersSet.clear();
console.log(ordersSet);

for (const order of ordersSet) {
  console.log(order);
}

const staff = ['waiter', 'chef', 'waiter', 'manager', 'chef', 'waiter'];

console.log(staff);
const uniqueStaff = [...new Set(staff)];

console.log(uniqueStaff);
console.log(uniqueStaff.length);

console.log(new Set('pasinduthiwanka').size);

const rest = new Map();

rest.set('name', 'Classical Italiano');

rest.set(1, 'Firuence');
rest.set(2, 'Lisbon');
rest.set(1, 'NYC');

console.log(rest);

rest
  .set('Categories', ['Italian', 'Pizzeria', 'vegetarian', 'Organic'])
  .set('Open', 11)
  .set('Close', 23)
  .set(true, 'we are open')
  .set(false, 'we are closed');

console.log(rest.get('name'));
console.log(rest.get(true));

const time = 6;

console.log(rest.get(time > rest.get('open') && time < rest.get('close')));

console.log(rest.has('Categories'));
console.log(rest.delete(2));
console.log(rest);

const rest1 = new Map();

const arr = [1, 2];
rest1.set(arr, 'Test');
rest1.set(document.querySelector('h1'), 'Heading');
console.log(rest1);

console.log(rest.get(arr));
console.log(rest.has('Categories'));
const question = new Map([
  ['question', 'what is the best programming Language ?'],
  [1, 'c'],
  [2, 'java'],
  [3, 'python'],
  [4, 'JavaScript'],
  ['correct', 3],
  [true, 'Correct'],
  [false, 'Try Again'],
]);

console.log(question);

//convert object to map
console.log(Object.entries(openingHours));

const hoursMap = new Map(Object.entries(openingHours));
console.log(hoursMap);

for (const [key, value] of question) {
  if (typeof key === 'number') {
    console.log(`Answer ${key} ==> Language ${value}`);
  }
}

// const answer = Number(prompt('Your Answer :'));

console.log(answer);

console.log(question.get(question.get('correct') === answer));

//Conver Map to Array

console.log([...question]);

//----------------------------------------

//coding Challange

const gameEvents = new Map([
  [17, '丘쬂잺 GOAL'],
  [36, '游대 Substitution'],
  [47, '丘쬂잺 GOAL'],
  [61, '游대 Substitution'],
  [64, '游댰 Yellow card'],
  [69, '游댮 Red card'],
  [70, '游대 Substitution'],
  [72, '游대 Substitution'],
  [76, '丘쬂잺 GOAL'],
  [80, '丘쬂잺 GOAL'],
  [92, '游댰 Yellow card'],
]);

const events = [...new Set(gameEvents.values())];

console.log(events);

gameEvents.delete(64);
console.log(gameEvents);

console.log(
  `an event happend ,on avarage, every ${90 / gameEvents.size} minutes`
);

const time = [...gameEvents.keys()].pop();
console.log(time);

console.log(
  `an event happend ,on avarage, every ${time / gameEvents.size} minutes`
);

for (const [min, event] of gameEvents) {
  const half = min <= 45 ? 'FIRST' : 'SECOND';
  console.log(`[${half} HALF]  ${min}  : ${event}`);
}
